{"version":3,"file":"static/js/237.77a47576.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/PhoneBook/ContactsList/contacts-list.module.scss?d56f","components/PhoneBook/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/PhoneBook/ContactsFilter/contacts-filter.module.scss?fdef","components/PhoneBook/ContactsFilter/ContactsFilter.jsx","webpack://react-homework-template/./src/components/PhoneBook/ContactsForm/contacts-form.module.scss?5d22","components/PhoneBook/ContactsForm/initialState.js","components/PhoneBook/ContactsForm/ContactsForm.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/PhoneBook/phone-book.module.scss?bf0b","components/PhoneBook/PhoneBook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contacts-list_list__ER5uk\",\"item\":\"contacts-list_item__pRV9O\",\"btn\":\"contacts-list_btn__Qwmw+\"};","import css from './contacts-list.module.scss';\nimport PropTypes from 'prop-types';\n\nconst ContactsList = ({ contacts, removeContact }) => {\n  const items = contacts.map(({ id, name, number }) => (\n    <li key={id} className={css.item}>\n      {name}: {number}{' '}\n      <button onClick={() => removeContact(id)} className={css.btn}>\n        Delete\n      </button>\n    </li>\n  ));\n  return <ol className={css.list}> {items}</ol>;\n};\n\nexport default ContactsList;\n\nContactsList.defaultProps = {\n  contacts: [],\n};\n\nContactsList.propTypes = {\n  removeContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"contacts-filter_title__JHeB3\",\"label\":\"contacts-filter_label__ZBkTF\",\"input\":\"contacts-filter_input__g9doQ\"};","import css from './contacts-filter.module.scss';\nimport PropTypes from 'prop-types';\n\nconst ContactsFilter = ({ handleChange, value }) => {\n  return (\n    <>\n      <h3 className={css.title}>Contacts</h3>\n      <label className={css.label}>Find contacts by name</label>\n      <input\n        value={value}\n        name=\"filter\"\n        className={css.input}\n        onChange={handleChange}\n      />\n    </>\n  );\n};\n\nexport default ContactsFilter;\n\nContactsFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"contacts-form_formGroup__2fo+P\",\"label\":\"contacts-form_label__LJ0V5\",\"input\":\"contacts-form_input__N2uvt\",\"title\":\"contacts-form_title__IXxTL\",\"btn\":\"contacts-form_btn__e8WrG\"};","const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport css from './contacts-form.module.scss';\n\nimport initialState from './initialState';\n\nconst ContactsForm = ({ onSubmit }) => {\n  const [contact, setContact] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setContact(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...contact });\n    setContact({ ...initialState });\n  };\n\n  const { name, number } = contact;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={css.formGroup}>\n        <label className={css.label}>Name</label>\n        <input\n          type=\"text\"\n          className={css.input}\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n\n      <div className={css.formGroup}>\n        <label className={css.label}>Number</label>\n        <input\n          type=\"tel\"\n          className={css.input}\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n\n      <button className={css.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactsForm;\n\nContactsForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","export const getAllContacts = ({ contacts }) => contacts.items;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  const res = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n  return res;\n};\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"phone-book_title__ielor\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport ContactsList from './ContactsList/ContactsList';\nimport ContactsFilter from './ContactsFilter/ContactsFilter';\nimport ContactsForm from './ContactsForm/ContactsForm';\n\nimport {\n  fetchAllContacts,\n  fetchAddContact,\n  fetchDeleteContact,\n} from 'redux/contacts/contacts-operations';\n\nimport { setFilter } from 'redux/filter/filter-slice';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport css from './phone-book.module.scss';\n\nconst PhoneBook = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const onAddContact = ({ name, number }) => {\n    const action = fetchAddContact({ name, number });\n    dispatch(action);\n  };\n\n  const handleRemoveContact = id => {\n    const action = fetchDeleteContact(id);\n    dispatch(action);\n  };\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <>\n      <div className={css.block}>\n        <h3 className={css.title}>Phone Book</h3>\n        <ContactsForm onSubmit={onAddContact} />\n      </div>\n      <div className={css.block}>\n        <ContactsFilter value={filter} handleChange={handleFilter} />\n        <ContactsList\n          contacts={filteredContacts}\n          removeContact={handleRemoveContact}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default PhoneBook;\n"],"names":["ContactsList","contacts","removeContact","items","map","id","name","number","className","css","onClick","defaultProps","handleChange","value","onChange","onSubmit","useState","initialState","contact","setContact","target","prevState","e","preventDefault","type","pattern","title","required","getFilteredContacts","filter","normalizedFilter","toLowerCase","includes","getFilter","filteredContacts","useSelector","dispatch","useDispatch","useEffect","fetchAllContacts","action","fetchAddContact","setFilter","fetchDeleteContact"],"sourceRoot":""}